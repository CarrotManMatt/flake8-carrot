[tool.poetry]
name = "flake8-carrot"
version = "v0.0.1"
license = "Apache-2.0"
description = "A plugin for Flake8; Finding opinionated problems in your Python code. Ensures that your Python code adhere's to CarrotManMatt's style guide."
authors = ["Matt Norton <matt@carrotmanmatt.com>"]
repository = "https://github.com/CarrotManMatt/flake8-carrot.git"
keywords = ["python", "flake8", "flake8-plugin", "linter", "static analysis"]
classifiers = [
    "Development Status :: 1 - Planning",
    "Environment :: Console",
    "Framework :: Flake8",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Quality Assurance",
    "Typing :: Typed",
]
packages = [{include = "flake8_carrot"}]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.plugins."flake8.extension"]
CAR = "flake8_carrot:CarrotPlugin"
TXB = "flake8_carrot:TeXBotPlugin"


[tool.poetry.dependencies]
python = "^3.12"
flake8 = "^7.1"
classproperties = {git = "https://github.com/hottwaj/classproperties.git"}

[tool.poetry.group.dev.dependencies]
pytest = "^8.3"
ruff = "^0.6"
pre-commit = "^4.0"
mypy = "^1.11"
yamllint = "^1.35"
astpretty = "^3.0"



[tool.pytest.ini_options]
filterwarnings = ["ignore:'audioop':DeprecationWarning"]


[tool.mypy]
exclude = ["venv/", "examples/"]
extra_checks = true
warn_unused_configs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
check_untyped_defs = true
disallow_any_generics = true
disallow_any_unimported = true
disallow_any_decorated = true
disallow_any_explicit = true
disallow_subclassing_any = true
disallow_untyped_decorators = true
disallow_incomplete_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
no_implicit_reexport = true
strict_equality = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = [
    "astpretty",
]
ignore_missing_imports = true


[tool.ruff]
output-format = "concise"
line-length = 95
target-version ="py312"
extend-exclude = [
    "venv/",
    "examples/",
    ".vscode",
    ".idea",
    ".pytest_cache",
    ".mypy_cache",
    ".ruff_cache",
    "__pycache__",
]

[tool.ruff.lint]
select = [
    "E",
    "F",
    "W",
    "C",
    "I",
    "N",
    "D",
    "UP",
    "YTT",
    "ANN",
    "ASYNC",
    "S",
    "BLE",
    "FBT",
    "B",
    "A",
    "COM",
    "DTZ",
    "T",
    "EM",
    "EXE",
    "ISC",
    "ICN",
    "LOG",
    "G",
    "INP",
    "PIE",
    "PYI",
    "PT",
    "Q",
    "RSE",
    "RET",
    "SLF",
    "SLOT",
    "SIM",
    "TID",
    "TCH",
    "INT",
    "ARG",
    "PTH",
    "TD",
    "FIX",
    "ERA",
    "PGH",
    "PL",
    "TRY",
    "FLY",
    "PERF",
    "FURB",
    "DOC",
    "RUF",
]
fixable = [
    "I001",
    "TCH",
    "F401",
    "F541",
    "F632",
    "F811",
    "F901",
    "E2",
    "E3",
    "E401",
    "E502",
    "E703",
    "E71",
    "W29",
    "W391",
    "D2",
    "D3",
    "D400",
    "D406",
    "D415",
    "UP",
    "YTT",
    "B004",
    "EXE004",
    "G010",
    "PIE",
    "PYI009",
]
ignore = [
    "D203",
    "D212",
    "N806",
    "S603",
    "ANN101",
    "ANN102",
    "Q003",
    "TD002",
    "TD003",
    "UP040",  # NOTE: mypy does not currently support PEP 695 type aliases, so they should not be used
    "SIM910",
    "PIE808",
]
task-tags = [
    "TODO",
    "FIXME",
    "HACK",
    "BUG",
    "NOBUG",
    "REQ",
    "IDEA",
    "NOTE",
    "ISSUE",
    "DONE",
]
external = ["CAR", "TXB"]

[tool.ruff.lint.per-file-ignores]
"tests/**/test_*.py" = ["S101"]

[tool.ruff.lint.flake8-pytest-style]
parametrize-values-type = "tuple"

[tool.ruff.lint.mccabe]
max-complexity = 18

[tool.ruff.lint.pycodestyle]
ignore-overlong-task-comments = true
max-doc-length = 95

[tool.ruff.lint.pylint]
allow-magic-value-types = ["str", "bytes", "int"]
max-args = 7
max-returns = 10
max-branches = 19

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true
